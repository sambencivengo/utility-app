{"ast":null,"code":"var _jsxFileName = \"/Users/sambencivengo/Coding/test-project/utility-app/src/components/TasksSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TasksSection = () => {\n  _s();\n\n  const url = 'http://localhost:4000/tasks';\n  const [tasks, setTasks] = useState([]);\n  const [completedTasks, setCompletedTasks] = useState([]);\n  const [task, setTask] = useState({});\n\n  const handleFormInput = e => {\n    console.log(`Key = ${e.target.name} : Value = ${e.target.value}`);\n    setTask({\n      [e.target.name]: e.target.value\n    });\n  }; // POSTING NEW TASK\n\n\n  const postFunction = () => {\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n        Accept: 'application/json'\n      },\n      body: JSON.stringify(task)\n    }).then(r => r.json()).then(newTask => {\n      console.log(newTask);\n      setTaskList([...taskList, newTask]);\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    postFunction();\n    e.target.reset();\n  }; // FETCHING INITIAL TASKLIST\n\n\n  useEffect(() => {\n    fetch(url).then(r => r.json()).then(data => {\n      const incomplete = data.filter(task => task.completed_satus === false);\n      console.log('From useEffect: ', data);\n      const complete = data.filter(task => task.completed_satus === true);\n      setTasks(incomplete);\n      setCompletedTasks(complete);\n    });\n  }, []);\n  console.log(tasks);\n  console.log(completedTasks); // COMPLETE TASK\n\n  const handleComplete = completedTask => {\n    // use this\n    console.log(completedTask);\n    setCompletedTaskList([...completedTaskList, completedTask]);\n  }; // DELETE TASK\n\n\n  const handleDelete = doomedTask => {\n    fetch(url + '/' + doomedTask.id, {\n      method: 'DELETE'\n    }).then(() => {\n      const filteredTasks = taskList.filter(task => task.id !== doomedTask.id);\n      setTaskList(filteredTasks);\n    });\n    console.log(doomedTask);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"What do you need to do?\",\n        name: \"task_item\",\n        onChange: handleFormInput,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-lists\",\n      children: [/*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: completedTasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TasksSection, \"kpvKFtz30r+EfpVVZ5FLccN4Ftc=\");\n\n_c = TasksSection;\nexport default TasksSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksSection\");","map":{"version":3,"sources":["/Users/sambencivengo/Coding/test-project/utility-app/src/components/TasksSection.js"],"names":["React","useState","TasksSection","url","tasks","setTasks","completedTasks","setCompletedTasks","task","setTask","handleFormInput","e","console","log","target","name","value","postFunction","fetch","method","headers","Accept","body","JSON","stringify","then","r","json","newTask","setTaskList","taskList","handleSubmit","preventDefault","reset","useEffect","data","incomplete","filter","completed_satus","complete","handleComplete","completedTask","setCompletedTaskList","completedTaskList","handleDelete","doomedTask","id","filteredTasks"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nconst TasksSection = () => {\n\tconst url = 'http://localhost:4000/tasks';\n\tconst [tasks, setTasks] = useState([]);\n\tconst [completedTasks, setCompletedTasks] = useState([]);\n\tconst [task, setTask] = useState({});\n\tconst handleFormInput = (e) => {\n\t\tconsole.log(`Key = ${e.target.name} : Value = ${e.target.value}`);\n\t\tsetTask({ [e.target.name]: e.target.value });\n\t};\n\n\t// POSTING NEW TASK\n\tconst postFunction = () => {\n\t\tfetch(url, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t\tAccept: 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(task),\n\t\t})\n\t\t\t.then((r) => r.json())\n\n\t\t\t.then((newTask) => {\n\t\t\t\tconsole.log(newTask);\n\t\t\t\tsetTaskList([...taskList, newTask]);\n\t\t\t});\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tpostFunction();\n\t\te.target.reset();\n\t};\n\n\t// FETCHING INITIAL TASKLIST\n\tuseEffect(() => {\n\t\tfetch(url)\n\t\t\t.then((r) => r.json())\n\t\t\t.then((data) => {\n\t\t\t\tconst incomplete = data.filter(\n\t\t\t\t\t(task) => task.completed_satus === false\n\t\t\t\t);\n\t\t\t\tconsole.log('From useEffect: ', data);\n\n\t\t\t\tconst complete = data.filter(\n\t\t\t\t\t(task) => task.completed_satus === true\n\t\t\t\t);\n\t\t\t\tsetTasks(incomplete);\n\t\t\t\tsetCompletedTasks(complete);\n\t\t\t});\n\t}, []);\n\n\tconsole.log(tasks);\n\tconsole.log(completedTasks);\n\n\t// COMPLETE TASK\n\n\tconst handleComplete = (completedTask) => {\n\t\t// use this\n\t\tconsole.log(completedTask);\n\t\tsetCompletedTaskList([...completedTaskList, completedTask]);\n\t};\n\n\t// DELETE TASK\n\tconst handleDelete = (doomedTask) => {\n\t\tfetch(url + '/' + doomedTask.id, {\n\t\t\tmethod: 'DELETE',\n\t\t}).then(() => {\n\t\t\tconst filteredTasks = taskList.filter(\n\t\t\t\t(task) => task.id !== doomedTask.id\n\t\t\t);\n\t\t\tsetTaskList(filteredTasks);\n\t\t});\n\t\tconsole.log(doomedTask);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<input\n\t\t\t\t\tplaceholder=\"What do you need to do?\"\n\t\t\t\t\tname=\"task_item\"\n\t\t\t\t\tonChange={handleFormInput}\n\t\t\t\t\trequired\n\t\t\t\t></input>\n\t\t\t\t<button>Submit</button>\n\t\t\t</form>\n\n\t\t\t<div className=\"task-lists\">\n\t\t\t\t<TaskList tasks={tasks} />\n\t\t\t\t<TaskList tasks={completedTasks} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default TasksSection;\n"]},"metadata":{},"sourceType":"module"}