[{"/Users/sambencivengo/Coding/test-project/utility-app/src/index.js":"1","/Users/sambencivengo/Coding/test-project/utility-app/src/components/App.js":"2","/Users/sambencivengo/Coding/test-project/utility-app/src/components/NavBar.js":"3","/Users/sambencivengo/Coding/test-project/utility-app/src/components/Home.js":"4","/Users/sambencivengo/Coding/test-project/utility-app/src/components/LandingPage.js":"5","/Users/sambencivengo/Coding/test-project/utility-app/src/components/TaskCard.js":"6","/Users/sambencivengo/Coding/test-project/utility-app/src/components/TasksSection.js":"7","/Users/sambencivengo/Coding/test-project/utility-app/src/components/TaskList.js":"8"},{"size":526,"mtime":1635437848443,"results":"9","hashOfConfig":"10"},{"size":519,"mtime":1636930797463,"results":"11","hashOfConfig":"10"},{"size":785,"mtime":1635439424931,"results":"12","hashOfConfig":"10"},{"size":88,"mtime":1635439745117,"results":"13","hashOfConfig":"10"},{"size":251,"mtime":1636985149692,"results":"14","hashOfConfig":"10"},{"size":737,"mtime":1636985521747,"results":"15","hashOfConfig":"10"},{"size":2188,"mtime":1636931876100,"results":"16","hashOfConfig":"10"},{"size":295,"mtime":1636989502083,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"wknq0j",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sambencivengo/Coding/test-project/utility-app/src/index.js",[],["36","37"],"/Users/sambencivengo/Coding/test-project/utility-app/src/components/App.js",[],"/Users/sambencivengo/Coding/test-project/utility-app/src/components/NavBar.js",[],"/Users/sambencivengo/Coding/test-project/utility-app/src/components/Home.js",[],"/Users/sambencivengo/Coding/test-project/utility-app/src/components/LandingPage.js",[],"/Users/sambencivengo/Coding/test-project/utility-app/src/components/TaskCard.js",[],"/Users/sambencivengo/Coding/test-project/utility-app/src/components/TasksSection.js",["38","39"],"import React, { useState, useEffect } from 'react';\n\nimport TaskList from './TaskList';\n\nconst TasksSection = () => {\n\tconst url = 'http://localhost:4000/tasks';\n\tconst [tasks, setTasks] = useState([]);\n\tconst [completedTasks, setCompletedTasks] = useState([]);\n\tconst [task, setTask] = useState({});\n\tconst handleFormInput = (e) => {\n\t\tconsole.log(`Key = ${e.target.name} : Value = ${e.target.value}`);\n\t\tsetTask({ [e.target.name]: e.target.value });\n\t};\n\n\t// POSTING NEW TASK\n\tconst postFunction = () => {\n\t\tfetch(url, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json',\n\t\t\t\tAccept: 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(task),\n\t\t})\n\t\t\t.then((r) => r.json())\n\n\t\t\t.then((newTask) => {\n\t\t\t\tconsole.log(newTask);\n\t\t\t\tsetTasks([...tasks, newTask]);\n\t\t\t});\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tpostFunction();\n\t\te.target.reset();\n\t};\n\n\t// FETCHING INITIAL TASKLIST\n\tuseEffect(() => {\n\t\tfetch(url)\n\t\t\t.then((r) => r.json())\n\t\t\t.then((data) => {\n\t\t\t\tconst incomplete = data.filter(\n\t\t\t\t\t(task) => task.completed_status === false\n\t\t\t\t);\n\t\t\t\tconsole.log('From useEffect: ', data);\n\n\t\t\t\tconst complete = data.filter(\n\t\t\t\t\t(task) => task.completed_status === true\n\t\t\t\t);\n\t\t\t\tsetTasks(incomplete);\n\t\t\t\tsetCompletedTasks(complete);\n\t\t\t});\n\t}, []);\n\n\tconsole.log(tasks);\n\tconsole.log(completedTasks);\n\n\t// COMPLETE TASK\n\n\tconst handleComplete = (completedTask) => {\n\t\t// use this\n\t\tconsole.log(completedTask);\n\t\tsetCompletedTasks([...completedTasks, completedTask]);\n\t};\n\n\t// DELETE TASK\n\tconst handleDelete = (doomedTask) => {\n\t\tfetch(url + '/' + doomedTask.id, {\n\t\t\tmethod: 'DELETE',\n\t\t}).then(() => {\n\t\t\tconst filteredTasks = tasks.filter(\n\t\t\t\t(task) => task.id !== doomedTask.id\n\t\t\t);\n\t\t\tsetTasks(filteredTasks);\n\t\t});\n\t\tconsole.log(doomedTask);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<input\n\t\t\t\t\tplaceholder=\"What do you need to do?\"\n\t\t\t\t\tname=\"task_item\"\n\t\t\t\t\tonChange={handleFormInput}\n\t\t\t\t\trequired\n\t\t\t\t></input>\n\t\t\t\t<button>Submit</button>\n\t\t\t</form>\n\n\t\t\t<div className=\"task-lists\">\n\t\t\t\t<TaskList tasks={tasks} />\n\t\t\t\t<TaskList tasks={completedTasks} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default TasksSection;\n","/Users/sambencivengo/Coding/test-project/utility-app/src/components/TaskList.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":62,"column":8,"nodeType":"46","messageId":"47","endLine":62,"endColumn":22},{"ruleId":"44","severity":1,"message":"48","line":69,"column":8,"nodeType":"46","messageId":"47","endLine":69,"endColumn":20},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'handleComplete' is assigned a value but never used.","Identifier","unusedVar","'handleDelete' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]